var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"HI","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [NMFibreWalk, NMFibreWalk.BathDiscretizations]\nOrder   = [:module, :type, :function]","category":"page"},{"location":"#NMFibreWalk.NMFibreWalk","page":"Home","title":"NMFibreWalk.NMFibreWalk","text":"An implementation of the non-markovian quantum walk in k-space with a discrete bath\n\n\n\n\n\n","category":"module"},{"location":"#NMFibreWalk.Diagonalization","page":"Home","title":"NMFibreWalk.Diagonalization","text":"Diagonalization(H)\nDiagonalization(k, params)\n\nThe result of diagonalizing the system hamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.ExtendedModelParameters","page":"Home","title":"NMFibreWalk.ExtendedModelParameters","text":"ExtendedModelParameters([keyword args])\n\nThe parameters required to simulate the model, agnostic of how they are arrived at.  Instead of specifying the bath spectrum and coupling directly, these values are computed later on.\n\nv::Float64: Intracell hopping.\nu::Float64: Ratio of inter to intracell hopping.\nspectral_density::OhmicSpectralDensity: The spectral density to use for the bath.\nN::Int64: The number of bath modes.\ndiscretization::BathDiscretization: The bath discretization method to use. See BathDiscretization.\nnormalize::Bool: Whether to normalize the spectra density. See discretize_bath.\n\nsw_approximation::Bool: Whether the system should simulated in the Schrieffer-Wolff approximation.\n\nω_A::Float64: The energy of the A site.\nη0::Float64: The damping rate of the small loop.\nη0_bath::Float64: The damping rate of the big loop.\nη_coup::Float64: The damping rate due to the transmission line attached to the small loop.\nδ::Float64: The hybridization amplitude.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.ModelParameters","page":"Home","title":"NMFibreWalk.ModelParameters","text":"The parameters required to simulate the model, agnostic of how they are arrived at.\n\nv::Float64: Intracell hopping.\nu::Float64: Ratio of inter to intracell hopping.\nε::Vector{Float64}: Bath energy levels.\ng::Vector{Float64}: Bath coupling strengths.\nsw_approximation::Bool: Whether the system should simulated in the Schrieffer-Wolff approximation.\nω_A::Float64: Energy of the A site\nη::Vector{Float64}: The damping rates.\nψ::Float64: The asymmetry phase for the g.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.Transmission","page":"Home","title":"NMFibreWalk.Transmission","text":"Transmission(Ω_B, full_params)\nTransmission(Ω_B, full_params, n)\n\n\nConstruct the transmission amplitude for the fourier component with frequency ω^0_m-ω^0_n from the free spectral range of the big loop Ω_B, the model parameters full_params.\n\nTransmission(Ω_B, full_params)\nTransmission(Ω_B, full_params, n)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:668.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.Transmission-2","page":"Home","title":"NMFibreWalk.Transmission","text":"A container to hold the information to construct the transmission amplitude as a function of the laser frequency.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.Transmission-Tuple{Real}","page":"Home","title":"NMFibreWalk.Transmission","text":"The transmission frequency as a function of laser frequency ω.  If the harmonic of the transmission is zero, the stationary transmission intensity is returned. For higher harmonics the absolute value of the Fourier component is returned.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.WalkSolution","page":"Home","title":"NMFibreWalk.WalkSolution","text":"WalkSolution(k, params[, m_0])\n\nA structure holding the information for the dynamic solution of the quantum walk for a specific k and with optional initial position m_0. Callable with a time parameter.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.WalkSolution-Tuple{Real}","page":"Home","title":"NMFibreWalk.WalkSolution","text":"(WalkSolution)(t)\n\nThe solution state at time t.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.AnalyticPeakAmplitudes-Tuple{Integer, Integer, Any}","page":"Home","title":"NMFibreWalk.AnalyticPeakAmplitudes","text":"AnalyticPeakAmplitudes(m, n, p)\n\n\nThe peak amplitude O_mγ O^-1_γn as a function of the model parameters p.\n\nAnalyticPeakAmplitudes(m, n, p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:600.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.V_An-Tuple{ModelParameters}","page":"Home","title":"NMFibreWalk.V_An","text":"V_An(p)\n\n\nThe matrix element V^0_An either as a vector for all n or for a specific n. Here n should be positive.\n\nV_An(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:569.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.V_nA-Tuple{ModelParameters}","page":"Home","title":"NMFibreWalk.V_nA","text":"V_nA(p)\n\n\nThe matrix element V^0_nA either as a vector for all n or for a specific n. Here n should be positive.\n\nV_nA(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:576.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.decay_rate","page":"Home","title":"NMFibreWalk.decay_rate","text":"decay_rate(params)\ndecay_rate(params, k)\n\n\ndecay_rate(params[, k::Real=0])\n\nThe approximate decay rate of ρ_A.\n\ndecay_rate(params)\ndecay_rate(params, k)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:522.\n\n\n\n\n\n","category":"function"},{"location":"#NMFibreWalk.dϕ-Tuple{Real, Real}","page":"Home","title":"NMFibreWalk.dϕ","text":"dϕ(k, u)\n\n\ndϕ(k::Real, u::Real) -> Real\n\n\nThe derivative of winding phase of the hopping amplitude. The arguments are as in v.\n\ndϕ(k, u)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:115.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.eigenmatrix-Tuple{Diagonalization}","page":"Home","title":"NMFibreWalk.eigenmatrix","text":"eigenmatrix(sol)\n\n\nA matrix with the eigenvectors of the hamiltonian as columns.\n\neigenmatrix(sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:258.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.hamiltonian-Tuple{Real, ModelParameters}","page":"Home","title":"NMFibreWalk.hamiltonian","text":"hamiltonian(k, params)\n\n\nhamiltonian(k, params)\n\nReturns the model Hamiltonian at momentum k for the params.  The basis is A bath levels.\n\nhamiltonian(k, params)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:216.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.inverse_eigenmatrix-Tuple{Diagonalization}","page":"Home","title":"NMFibreWalk.inverse_eigenmatrix","text":"inverse_eigenmatrix(sol)\n\n\nThe inverse of the matrix produced by eigenmatrix.\n\ninverse_eigenmatrix(sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:261.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.minimal_N-NTuple{4, Real}","page":"Home","title":"NMFibreWalk.minimal_N","text":"minimal_N(ρ_A, α, J, ω_c)\n\n\nminimal_N(ρ_A, α, J, ω_c)\nminimal_N(ρ_A, sd::OhmicSpectralDensity)\nminimal_N(ρ_A, params::ExtendedModelParameters)\n\nThe minimal number of bath modes needed to achieve a certain asymptotic value of ρ_A.\n\nminimal_N(ρ_A, α, J, ω_c)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:507.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.non_a_weight-Tuple{Real, WalkSolution}","page":"Home","title":"NMFibreWalk.non_a_weight","text":"non_a_weight(t, sol)\n\n\nThe probability density (in k) to be off the chain.\n\nnon_a_weight(t, sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:326.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.num_bath_modes-Tuple{ModelParameters}","page":"Home","title":"NMFibreWalk.num_bath_modes","text":"num_bath_modes(p)\n\n\nReturns the number of bath states for the model.\n\nnum_bath_modes(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:94.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.recurrence_time-Tuple{ModelParameters}","page":"Home","title":"NMFibreWalk.recurrence_time","text":"recurrence_time(p)\n\n\nrecurrence_time(params)\n\nReturns the estimated recurrence time for ρ_A.\n\nrecurrence_time(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:493.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.time_averaged_displacement_continuum-Tuple{ExtendedModelParameters}","page":"Home","title":"NMFibreWalk.time_averaged_displacement_continuum","text":"time_averaged_displacement_continuum(p)\n\n\nρ_A_continuum(k, p::ExtendedModelParameters)\n\nA continuum estimate for the long-time averaged mean displacement.\n\ntime_averaged_displacement_continuum(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:552.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.v-Tuple{Real, Real, Real}","page":"Home","title":"NMFibreWalk.v","text":"v(k, v, u)\n\n\nv(k::Real, v::Real, u::Real) -> Complex\n\n\nThe complex k rependent hopping amplitude, where v is the intracell hopping and u is the ratio of inter to intracell hopping.\n\nv(k, v, u)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:103.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.Δ-Tuple{ExtendedModelParameters}","page":"Home","title":"NMFibreWalk.Δ","text":"Δ(p)\n\n\nThe damping asymmetry such that the damping of the big loop is η_B = η_0 + 2δΔ.\n\nΔ(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:174.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.Κ-Tuple{Complex, ModelParameters}","page":"Home","title":"NMFibreWalk.Κ","text":"Κ(Ω, p)\n\n\nThe self-energy Κ(-i Ω_γ)\n\nΚ(Ω, p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:582.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.Ω-Tuple{Diagonalization}","page":"Home","title":"NMFibreWalk.Ω","text":"Ω(sol)\n\n\nThe complex eigenvalues of the the hamiltionian.\n\nΩ(sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:249.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.η0_A-Tuple{ExtendedModelParameters}","page":"Home","title":"NMFibreWalk.η0_A","text":"η0_A(params)\n\n\nThe damping rate of the A site.\n\nη0_A(params)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:181.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.η0_bath-Tuple{ExtendedModelParameters}","page":"Home","title":"NMFibreWalk.η0_bath","text":"η0_bath(params)\n\n\nThe damping rate of the bath modes.\n\nη0_bath(params)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:184.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.λ-Tuple{Diagonalization}","page":"Home","title":"NMFibreWalk.λ","text":"λ(sol)\n\n\nThe damping rates of the hamiltonian.\n\nλ(sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:255.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ρ_A-Tuple{Real, WalkSolution}","page":"Home","title":"NMFibreWalk.ρ_A","text":"ρ_A(t, sol)\n\n\nThe ho_arA(k t) at time t for the specific solution sol.\n\nρ_A(t, sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:318.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ρ_A_continuum-Tuple{Real, ExtendedModelParameters}","page":"Home","title":"NMFibreWalk.ρ_A_continuum","text":"ρ_A_continuum(k, p)\n\n\nρ_A_continuum(k, p::ExtendedModelParameters)\n\nA continuum estimate for the asymptotic value of ρ_A.\n\nρ_A_continuum(k, p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:532.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ρ_A_mean-Tuple{Real, Real, WalkSolution}","page":"Home","title":"NMFibreWalk.ρ_A_mean","text":"ρ_A_mean(T1, T2, solution)\n\n\nρ_A_mean(T1, T2, solution)\n\nThe value of ρ_A time averaged over [T1, T2].\n\nρ_A_mean(T1, T2, solution)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:383.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ρ_A_mean-Tuple{Real, WalkSolution}","page":"Home","title":"NMFibreWalk.ρ_A_mean","text":"ρ_A_mean(T, solution)\n\n\nρ_A_mean(T, solution)\n\nThe value of ρ_A time averaged over [0, T].\n\nρ_A_mean(T, solution)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:353.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ρ_A_mean-Tuple{WalkSolution}","page":"Home","title":"NMFibreWalk.ρ_A_mean","text":"ρ_A_mean(solution)\n\n\nρ_A_mean(solution)\n\nThe value of ρ_A time averaged over [0, ∞].\n\nρ_A_mean(solution)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:416.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ω-Tuple{Diagonalization}","page":"Home","title":"NMFibreWalk.ω","text":"ω(sol)\n\n\nThe eigenenergies of the hamiltonian.\n\nω(sol)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:252.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ϕ-Tuple","page":"Home","title":"NMFibreWalk.ϕ","text":"ϕ(args)\n\n\nThe winding phase of the hopping amplitude. The arguments are as in v.\n\nϕ(args)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:108.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.ℰ-Tuple{ModelParameters}","page":"Home","title":"NMFibreWalk.ℰ","text":"ℰ(p)\n\n\nℰ(p::ModelParameters)\n\nThe complex site-energies ϵ_n - i γ^0_n.\n\nℰ(p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:90.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.∂Κ-Tuple{Complex, ModelParameters}","page":"Home","title":"NMFibreWalk.∂Κ","text":"∂Κ(Ω, p)\n\n\nThe derivative of the self-energy Κ(-i Ω_γ)\n\n∂Κ(Ω, p)\n\ndefined at /home/hiro/Documents/org/roam/code/julia_code_project_for_the_non_markovian_quantum_walk_in_fiber_loops/src/NMFiberWalk/src/NMFibreWalk.jl:591.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.BathDiscretizations","page":"Home","title":"NMFibreWalk.BathDiscretizations","text":"Functionality related to the discretization of the spectral density into energies and coupling strengths. See discretize_bath.\n\n\n\n\n\n","category":"module"},{"location":"#NMFibreWalk.BathDiscretizations.BathDiscretization","page":"Home","title":"NMFibreWalk.BathDiscretizations.BathDiscretization","text":"BathDiscretization\n\nAn abstract type that defines how the bath is being discretized.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.BathDiscretizations.ExponentialBathDiscretization","page":"Home","title":"NMFibreWalk.BathDiscretizations.ExponentialBathDiscretization","text":"ExponentialBathDiscretization()\n\nDiscretize the bath with an exponential density of states ρ_f = Δ^-1 u^-\fracωΔ.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.BathDiscretizations.LinearBathDiscretization","page":"Home","title":"NMFibreWalk.BathDiscretizations.LinearBathDiscretization","text":"LinearBathDiscretization(integral_method=true, simple_energies=false)\n\nDiscretize the bath with a constant density of states.  The field integral_method controls whether the coupling strengths are computed using the integral of the spectral density or an approximation.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.BathDiscretizations.OhmicSpectralDensity","page":"Home","title":"NMFibreWalk.BathDiscretizations.OhmicSpectralDensity","text":"OhmicSpectralDensity(ω_c, J, α)\n\nAn ohmic spectral density of the form J(ω) = J \fracα+1ω_c^α+1 ω_c^α. Calling an instance evaluates the spectral density.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.BathDiscretizations.OhmicSpectralDensityIntegral","page":"Home","title":"NMFibreWalk.BathDiscretizations.OhmicSpectralDensityIntegral","text":"OhmicSpectralDensityIntegral(ω_c, J, α)\n\nThe antiderivate of the OhmicSpectralDensity. See its documentation for details.  This struct is callable.\n\n\n\n\n\n","category":"type"},{"location":"#NMFibreWalk.BathDiscretizations.OhmicSpectralDensityIntegral-Tuple{OhmicSpectralDensity}","page":"Home","title":"NMFibreWalk.BathDiscretizations.OhmicSpectralDensityIntegral","text":"OhmicSpectralDensityIntegral(J::OhmicSpectralDensity)\n\nInstantiate an OhmicSpectralDensityIntegral from an OhmicSpectralDensity J.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.BathDiscretizations.discretization_name-Tuple{LinearBathDiscretization}","page":"Home","title":"NMFibreWalk.BathDiscretizations.discretization_name","text":"discretization_name(discretization)\n\nReturns the name of the discretization.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.BathDiscretizations.discretize_bath","page":"Home","title":"NMFibreWalk.BathDiscretizations.discretize_bath","text":"discretize_bath(scheme, J, N[, normalize=true])\n\nDiscretize the bath using scheme according to the spectral density J into N energies and coupling strengths. Returns the energies ϵ and coupling strengths g as vectors. The coupling strengths can be optionally normalized so that _j g_j^2 = 1.\n\n\n\n\n\n","category":"function"},{"location":"#NMFibreWalk.BathDiscretizations.find_nodes_and_energies-Tuple{LinearBathDiscretization, OhmicSpectralDensity, Integer}","page":"Home","title":"NMFibreWalk.BathDiscretizations.find_nodes_and_energies","text":"find_nodes_and_energies(discretization::BathDiscretization, J, N)\n\nFind the interval boundaries x_k and the energies ϵ_k for the given discretization method, spectral density J and number of bath states N.\n\n\n\n\n\n","category":"method"},{"location":"#NMFibreWalk.BathDiscretizations.use_integral_method-Tuple{ExponentialBathDiscretization}","page":"Home","title":"NMFibreWalk.BathDiscretizations.use_integral_method","text":"use_integral_method(discretization)\n\nWhether to use integration to obtain the coupling strengths for discretization.\n\n\n\n\n\n","category":"method"}]
}
